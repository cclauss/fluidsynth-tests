name: ci
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:  # macos-13 in Intel, macos-latest is Apple Silicon ARM
        os: [macos-13, macos-latest, ubuntu-latest, ubuntu-24.04-arm, windows-latest, windows-2025]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      #- uses: astral-sh/setup-uv@v5
      #  with:
      #    python-version: 3.13
      #    version: "latest"
      - if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install fluidsynth libasound-dev portaudio19-dev python3-pyaudio
      - if: runner.os == 'macOS'
        run: |
          brew install fluid-synth
          echo "DYLD_LIBRARY_PATH=$(brew --prefix fluid-synth)/lib/" >> $GITHUB_ENV
      - if: runner.os == 'Windows'
        shell: bash
        run: |
          choco install fluidsynth
          echo "PATH=C:\tools\fluidsynth\bin:$PATH" >> $GITHUB_ENV
          echo "$PATH"
      - shell: bash
        run: echo "$PATH"
      - if: runner.os == 'Windows'
        run: ls C:\tools\fluidsynth\bin
      - if: runner.os == 'Windows'
        shell: bash
        run: /c/tools/fluidsynth/bin/fluidsynth.exe --version
      - if: runner.os == 'Windows'
        run: |
          dir C:\tools
          dir C:\tools\fluidsynth
          dir C:\tools\fluidsynth\bin
          ls C:\tools\fluidsynth\bin\fluidsynth.exe
          ls C:\tools\fluidsynth\bin\libfluidsynth-3.dll
        #  fluidsynth.exe --version
        #  ls /mnt/d/tools/fluidsynth/bin/fluidsynth.exe
        #  ls /mnt/d/tools/fluidsynth/bin/libfluidsynth-3.dll
        #  /mnt/d/tools/fluidsynth/bin/fluidsynth.exe --help
        #  C:\tools\fluidsynth\bin\fluidsynth.exe --help
        #  echo "PATH=$PATH"
        #  C:\tools\fluidsynth\bin\fluidsynth.exe --version
      # - run: uv pip install --editable .
      # - run: which fluidsynth
      - shell: bash
        run: fluidsynth --version
      - shell: python
        run: |
          from pathlib import Path

          dll_path = Path("C:/tools/fluidsynth/bin/libfluidsynth-3.dll")
          if dll_path.exists():
              print(f"Found {dll_path}")
          else:
              print(f"Did not find {dll_path}")
          dll_path = dll_path.resolve()
          if dll_path.exists():
              print(f"Found {dll_path}")
          else:
              print(f"Did not find {dll_path}")
          # import fluidsynth
          # print(fluidsynth)
          # print(dir(fluidsynth))
